{"version":3,"sources":["styles/MainBtn.module.scss","redux/types.ts","redux/appReducer.ts","redux/dataReducer.ts","redux/rootReducer.ts","images/hand.svg","redux/actions.ts","components/EndPage.tsx","components/Game/AnswerItem.tsx","components/Game/Quiz.tsx","components/Game/StatusBar.tsx","components/Spinner.tsx","components/MenuControl.tsx","components/FetchStatus.tsx","components/Game/Game.tsx","components/StartPage.tsx","App.jsx","index.tsx"],"names":["module","exports","FETCH_DATA","COUNTER","FINISH_GAME","SET_STATUS","TOGGLE_MENU","SHOW_SPINNER","FETCH_ERROR","initialState","counter","gameEnd","menu","spinner","questions","dataError","rootReducer","combineReducers","appReducer","state","action","type","payload","dataReducer","map","item","title","answers","rate","toggleMenu","statusUpdate","array","index","status","i","correct","mapDispatchToProps","finish","connect","useEffect","prize","slice","parseInt","reduce","a","b","id","className","src","hand","alt","mainBtnStyles","btn","to","check","questionTitle","answerIndex","dispatch","getState","forEach","setTimeout","length","question","delay","marker","content","answerPicked","undefined","style","animationDelay","onKeyDown","onClick","role","alphabet","Quiz","toUpperCase","StatusBar","menuVisibility","fetch","axios","get","then","res","data","catch","nextQuestion","StartPage","App","exact","path","component","EndPage","Game","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbd74d7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MainBtn_btn__2iIvj\"};","export const FETCH_DATA = \"DATA/FETCH_DATA\"\r\nexport const COUNTER = \"COUNTER\"\r\nexport const FINISH_GAME = \"GAME/FINISH_GAME\"\r\nexport const SET_STATUS = \"STATUS/SET_STATUS\"\r\nexport const TOGGLE_MENU = \"MENU/TOGGLE_MENU\"\r\nexport const SHOW_SPINNER = \"SPINNER/SHOW_SPINNER\"\r\nexport const FETCH_ERROR = \"FETCH/FETCH_ERROR\"\r\n","import {\r\n    TOGGLE_MENU,\r\n    COUNTER,\r\n    FINISH_GAME,\r\n    SHOW_SPINNER,\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    counter: 0,\r\n    gameEnd: false,\r\n    menu: false,\r\n    spinner: false,\r\n\r\n}\r\n\r\nexport type AppStateType = {\r\n    counter: number,\r\n    gameEnd: boolean,\r\n    menu: boolean,\r\n    spinner: boolean\r\n}\r\n\r\n\r\nexport default function appReducer(state: AppStateType = initialState, action: any) {\r\n    switch (action.type) {\r\n        case COUNTER:\r\n            return {\r\n                ...state,\r\n                counter: action.payload\r\n            }\r\n        case TOGGLE_MENU:\r\n            return {\r\n                ...state,\r\n                menu: !state.menu\r\n            }\r\n        case FINISH_GAME:\r\n            return {\r\n                ...state,\r\n                gameEnd: action.payload\r\n            }\r\n        case SHOW_SPINNER:\r\n            return {\r\n                ...state,\r\n                spinner: !state.spinner\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ActionsTypes } from \"./actions\";\r\nimport {\r\n  FETCH_DATA,\r\n  SET_STATUS,\r\n  FETCH_ERROR\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n  questions: null,\r\n  dataError: false\r\n}\r\n\r\nexport type QuestionstDataType = null | { title: string, answers: { title: string, status: string, correct: boolean }[], rate: string }[]\r\n\r\nexport type DataStateType = {\r\n  questions: QuestionstDataType,\r\n  dataError: boolean\r\n}\r\n\r\nexport default function dataReducer(state: DataStateType = initialState, action: ActionsTypes) {\r\n  switch (action.type) {\r\n\r\n    case FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        dataError: true\r\n      }\r\n\r\n    case FETCH_DATA:\r\n      return {\r\n        ...state,\r\n        questions: action.payload\r\n      }\r\n\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        questions: state.questions && state.questions.map(item => {\r\n          if (item.title === action.payload[0]) {\r\n            return { title: item.title, answers: action.payload[1], rate: item.rate }\r\n          }\r\n          return item\r\n\r\n        })\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport appReducer from \"./appReducer\";\r\nimport dataReducer from \"./dataReducer\"\r\n\r\nconst rootReducer = combineReducers({ appReducer, dataReducer })\r\n\r\nexport default rootReducer;","export default __webpack_public_path__ + \"static/media/hand.dbb74bc4.svg\";","import axios from \"axios\"\r\nimport { Action } from \"redux\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { RootState } from \"..\"\r\nimport { COUNTER, FETCH_DATA, FETCH_ERROR, FINISH_GAME, SET_STATUS, SHOW_SPINNER, TOGGLE_MENU } from \"./types\"\r\n\r\ninterface FetchErrorType {\r\n    type: typeof FETCH_ERROR\r\n}\r\n\r\ninterface ToggleMenuType {\r\n    type: typeof TOGGLE_MENU\r\n}\r\n\r\ninterface ShowSpinnerType {\r\n    type: typeof SHOW_SPINNER\r\n}\r\n\r\ninterface ChangeQuestionType {\r\n    type: typeof COUNTER,\r\n    payload: number\r\n}\r\n\r\ninterface FinishGameType {\r\n    type: typeof FINISH_GAME,\r\n    payload: boolean\r\n}\r\n\r\ninterface SetStatusType {\r\n    type: typeof SET_STATUS,\r\n    payload: (string | { title: string; status: string; correct: boolean; }[])[]\r\n}\r\n\r\ninterface FetchDataType {\r\n    type: typeof FETCH_DATA,\r\n    payload: any\r\n}\r\n\r\nexport function fetchError(): FetchErrorType {\r\n    return {\r\n        type: FETCH_ERROR\r\n    }\r\n}\r\nexport function toggleMenu(): ToggleMenuType {\r\n    return {\r\n        type: TOGGLE_MENU\r\n    }\r\n}\r\nexport function showSpinner(): ShowSpinnerType {\r\n    return {\r\n        type: SHOW_SPINNER\r\n    }\r\n}\r\n\r\nexport function changeQuestion(payload: number): ChangeQuestionType {\r\n    return {\r\n        type: COUNTER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function finishGame(payload: boolean): FinishGameType {\r\n    return {\r\n        type: FINISH_GAME,\r\n        payload\r\n    }\r\n}\r\nexport function setStatus(payload: (string | { title: string; status: string; correct: boolean; }[])[]): SetStatusType {\r\n    return {\r\n        type: SET_STATUS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport type ActionsTypes = FetchErrorType | ToggleMenuType | ShowSpinnerType | ChangeQuestionType | FinishGameType | SetStatusType | FetchDataType\r\n\r\n// eslint-disable-next-line no-undef\r\nexport function fetchData(): ThunkAction<void, RootState, unknown, Action<string>> {\r\n    return (dispatch) => {\r\n        axios.get(\"https://eugenere95.github.io/who_wants_to_be_a_millionaire/data.json\")\r\n            .then(res => {\r\n                dispatch({ type: FETCH_DATA, payload: res.data })\r\n            })\r\n            .catch(() => {\r\n                dispatch({ type: FETCH_ERROR })\r\n            })\r\n    };\r\n}\r\n\r\nfunction statusUpdate(array: { title: string, status: string, correct: boolean }[], index: number, status: string) {\r\n    return array.map((item, i) => {\r\n        if (i === index) {\r\n            return {\r\n                title: item.title,\r\n                status,\r\n                correct: item.correct\r\n            }\r\n        }\r\n        return {\r\n            title: item.title,\r\n            status: \"disabled\",\r\n            correct: item.correct\r\n        }\r\n\r\n    })\r\n}\r\n\r\n// eslint-disable-next-line no-undef\r\nexport function checkAnswer(questionTitle: string, answerIndex: number): ThunkAction<void, RootState, unknown, Action<string>> {\r\n    return (dispatch, getState) => {\r\n\r\n        const { appReducer, dataReducer } = getState()\r\n        const { questions } = dataReducer\r\n        const { counter } = appReducer\r\n        // eslint-disable-next-line no-unused-expressions\r\n        questions && questions.forEach((item: any) => {\r\n            if (item.title === questionTitle) {\r\n                dispatch({ type: SET_STATUS, payload: [item.title, statusUpdate(item.answers, answerIndex, \"selected\")] })\r\n                dispatch({ type: SHOW_SPINNER })\r\n\r\n                setTimeout(() => {\r\n                    if (item.answers[answerIndex].correct) {\r\n\r\n                        dispatch({ type: SET_STATUS, payload: [item.title, statusUpdate(item.answers, answerIndex, \"correct\")] })\r\n                        dispatch({ type: SHOW_SPINNER })\r\n\r\n                        if (counter + 1 !== questions.length) {\r\n                            setTimeout(() => { dispatch({ type: COUNTER, payload: counter + 1 }) }, 1500)\r\n                        } else {\r\n                            setTimeout(() => { dispatch({ type: FINISH_GAME, payload: true }) }, 1500)\r\n                        }\r\n                    } else {\r\n                        dispatch({ type: SET_STATUS, payload: [item.title, statusUpdate(item.answers, answerIndex, \"wrong\")] })\r\n                        dispatch({ type: SHOW_SPINNER })\r\n\r\n                        setTimeout(() => { dispatch({ type: FINISH_GAME, payload: true }) }, 1500)\r\n                    }\r\n                }, 1500)\r\n            }\r\n        })\r\n    };\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { RootState } from \"..\"\r\nimport hand from \"../images/hand.svg\"\r\nimport { finishGame } from \"../redux/actions\"\r\nimport { QuestionstDataType } from \"../redux/dataReducer\"\r\nimport mainBtnStyles from \"../styles/MainBtn.module.scss\"\r\n\r\ntype MapStatePropTypes = {\r\n  counter: number,\r\n  questions: QuestionstDataType\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  finish: (item: boolean) => void\r\n}\r\n\r\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\r\n\r\nfunction EndPage({ counter, questions, finish }: PropTypes) {\r\n  useEffect(() => {\r\n    finish(false)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const prize = (questions && counter > 0) ? questions.slice(0, counter).map(item => parseInt(item.rate, 10)).reduce((a, b) => a + b) : 0\r\n\r\n  return (\r\n    <section id=\"end-page\">\r\n      <div className=\"container\">\r\n        <img src={hand} alt=\"hand\" />\r\n        <div className=\"content\">\r\n          <p className=\"score\">Total score:</p>\r\n          <h2>\r\n            $\r\n            {prize}\r\n            {\" \"}\r\n            earned\r\n          </h2>\r\n          <Link className={mainBtnStyles.btn} to=\"/\">Try again</Link>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  counter: state.appReducer.counter,\r\n  questions: state.dataReducer.questions\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  finish: finishGame\r\n}\r\n\r\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, {}, RootState>(mapStateToProps, mapDispatchToProps)(EndPage)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { checkAnswer } from \"../../redux/actions\"\r\nimport { RootState } from \"../..\"\r\n\r\ntype MapDispatchPropTypes = {\r\n  check: (question: string, index: number) => void\r\n}\r\n\r\ntype OwnPropTypes = {\r\n  status: string,\r\n  question: string,\r\n  index: number,\r\n  delay: string,\r\n  marker: string,\r\n  content: string,\r\n}\r\n\r\ntype PropTypes = MapDispatchPropTypes & OwnPropTypes\r\n\r\nfunction AnswerItem({ status, question, index, delay, marker, content, check }: PropTypes) {\r\n  function pickAnswer(item1: string, item2: number) {\r\n    check(item1, item2)\r\n  }\r\n  const answerPicked = () => status === \"disabled\" ? undefined : pickAnswer(question, index)\r\n  return (\r\n    <div\r\n      className={`answer-item animate__animated animate__fadeIn ${status}`}\r\n      style={{ animationDelay: delay }}\r\n      onKeyDown={answerPicked}\r\n      onClick={answerPicked}\r\n      role=\"presentation\"\r\n    >\r\n      <div className=\"triangle-left\" />\r\n      <p>\r\n        <span>{marker}</span>\r\n        {\" \"}\r\n        {content}\r\n      </p>\r\n      <div className=\"triangle-right\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  check: checkAnswer\r\n}\r\n\r\nexport default connect<{}, MapDispatchPropTypes, OwnPropTypes, RootState>(null, mapDispatchToProps)(AnswerItem)\r\n","import React from \"react\"\r\nimport { QuestionstDataType } from \"../../redux/dataReducer\";\r\nimport AnswerItem from \"./AnswerItem\"\r\n\r\nconst alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\r\n\r\ntype PropTypes = {\r\n  questions: QuestionstDataType,\r\n  counter: number\r\n}\r\n\r\nfunction Quiz({ questions, counter }: PropTypes) {\r\n  return (\r\n    <section id=\"quiz\">\r\n      <div className=\"container\">\r\n        <h3 key={questions && questions[counter].title} className=\"animate__animated animate__fadeIn\">{questions && questions[counter].title}</h3>\r\n        <div className=\"answers\">\r\n          {questions && questions[counter].answers.map((item, index) => (\r\n            <AnswerItem key={item.title} content={item.title} status={item.status} index={index} marker={alphabet[index].toUpperCase()} question={questions[counter].title} delay={`${100 * index}ms`} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n","import React from \"react\"\r\nimport { QuestionstDataType } from \"../../redux/dataReducer\"\r\n\r\ntype OwnPropTypes = {\r\n  counter: number,\r\n  questions: QuestionstDataType\r\n}\r\n\r\nfunction StatusBar({ questions, counter }: OwnPropTypes) {\r\n  return (\r\n    <section id=\"status-bar\">\r\n      <div className=\"rates\">\r\n\r\n        {questions && questions.map(((item, index) => (\r\n          <div className={`rate ${counter < index ? \"\" : (counter === index ? \"active\" : \"passed\")}`} key={item.title + item.rate}>\r\n            <div className=\"triangle-left\" />\r\n            <p>{item.rate}</p>\r\n            <div className=\"triangle-right\" />\r\n          </div>\r\n        )))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default StatusBar\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { RootState } from \"..\"\r\n\r\ntype MapStatePropTypes = {\r\n  spinner: boolean\r\n}\r\n\r\nfunction Spinner({ spinner }: MapStatePropTypes) {\r\n  if (spinner) {\r\n    return (\r\n      <div id=\"spinner\">\r\n        <i className=\"fas fa-circle-notch fa-spin\" />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  spinner: state.appReducer.spinner\r\n})\r\n\r\nexport default connect<MapStatePropTypes, {}, {}, RootState>(mapStateToProps, {})(Spinner)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { RootState } from \"..\"\r\nimport { toggleMenu } from \"../redux/actions\"\r\n\r\ntype PropTypes = {\r\n  menu: boolean\r\n}\r\n\r\nfunction MenuControl({ menu }: PropTypes) {\r\n  function menuVisibility() {\r\n    toggleMenu()\r\n  }\r\n  return (\r\n    <div id=\"menu-control\" role=\"presentation\" onClick={menuVisibility} onKeyDown={menuVisibility}>\r\n      {menu ? <i className=\"fas fa-times\" /> : <i className=\"fas fa-bars\" />}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  menu: state.appReducer.menu\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  toggleMenu\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuControl)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport mainBtnStyles from \"../styles/MainBtn.module.scss\"\r\nimport { RootState } from \"..\"\r\n\r\ntype MapStatePropTypes = {\r\n  dataError: boolean,\r\n}\r\n\r\nfunction FetchStatus({ dataError }: MapStatePropTypes) {\r\n  if (dataError) {\r\n    return (\r\n      <h2 className=\"fetch-status-title\">\r\n        OOPS! Some server error.\r\n        <br />\r\n        <Link className={mainBtnStyles.btn} to=\"/\">Return to Main</Link>\r\n      </h2>\r\n    )\r\n\r\n  }\r\n  return <h2 className=\"fetch-status-title\"><i className=\"fas fa-circle-notch fa-spin\" /></h2>\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropTypes => ({ dataError: state.dataReducer.dataError })\r\n\r\nexport default connect<MapStatePropTypes, {}, {}, RootState>(mapStateToProps, {})(FetchStatus)\r\n","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Quiz from \"./Quiz\"\r\nimport StatusBar from \"./StatusBar\"\r\nimport { fetchData, changeQuestion } from \"../../redux/actions\"\r\nimport \"@fortawesome/fontawesome-free/css/all.css\"\r\nimport Spinner from \"../Spinner\"\r\nimport MenuControl from \"../MenuControl\"\r\nimport FetchStatus from \"../FetchStatus\"\r\nimport { RootState } from \"../..\"\r\nimport { QuestionstDataType } from \"../../redux/dataReducer\"\r\n\r\ntype MapStatePropTypes = {\r\n  questions: QuestionstDataType,\r\n  counter: number,\r\n  gameEnd: boolean,\r\n  menu: boolean,\r\n}\r\n\r\ntype MapDispatchPropTypes = {\r\n  fetch: () => void,\r\n  nextQuestion: (questionNumber: number) => void,\r\n}\r\n\r\ntype PropTypes = MapStatePropTypes & MapDispatchPropTypes\r\n\r\nfunction Game({ questions, counter, gameEnd, menu, fetch, nextQuestion }: PropTypes) {\r\n\r\n  useEffect(() => {\r\n    fetch()\r\n    nextQuestion(0)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (gameEnd) {\r\n    return <Redirect to=\"/result\" />\r\n  }\r\n  return (\r\n    <section id=\"game\" className={menu ? \"active\" : \"\"}>\r\n      {!questions ? <FetchStatus /> : (\r\n        <>\r\n          <Spinner />\r\n          <Quiz questions={questions} counter={counter} />\r\n          <StatusBar questions={questions} counter={counter} />\r\n          <MenuControl />\r\n        </>\r\n      )}\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  questions: state.dataReducer.questions,\r\n  counter: state.appReducer.counter,\r\n  menu: state.appReducer.menu,\r\n  gameEnd: state.appReducer.gameEnd\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  fetch: fetchData,\r\n  nextQuestion: changeQuestion\r\n}\r\nexport default connect<MapStatePropTypes, MapDispatchPropTypes, {}, RootState>(mapStateToProps, mapDispatchToProps)(Game)","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport hand from \"../images/hand.svg\"\r\nimport mainBtnStyles from \"../styles/MainBtn.module.scss\"\r\n\r\nfunction StartPage() {\r\n  return (\r\n    <section id=\"start-page\">\r\n      <div className=\"container\">\r\n        <img className=\"animate__animated animate__zoomIn\" src={hand} alt=\"hand\" />\r\n        <div className=\"content\">\r\n          <h2>Who wants to be a millionaire?</h2>\r\n          <Link className={mainBtnStyles.btn} to=\"/game\">Start</Link>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React from \"react\";\nimport {HashRouter as Router, Route} from \"react-router-dom\"\nimport EndPage from \"./components/EndPage\";\nimport Game from \"./components/Game/Game\";\nimport StartPage from \"./components/StartPage\";\nimport \"animate.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={StartPage} />\n      <Route path=\"/result\" component={EndPage} />\n      <Route path=\"/game\" component={Game} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./redux/rootReducer\";\nimport App from \"./App\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n// eslint-disable-next-line no-undef\nexport type RootState = ReturnType<typeof rootReducer>\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}